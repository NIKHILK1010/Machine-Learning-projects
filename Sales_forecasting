#!/usr/bin/env python
# coding: utf-8

# In[1]:


import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
get_ipython().run_line_magic('matplotlib', 'inline')
import math


# In[3]:


df=pd.read_csv("shampoo_sales.csv")
df.head()


# In[4]:


type(df)


# In[7]:


df=pd.read_csv("shampoo_sales.csv",index_col=[0],parse_dates=True,squeeze=True)
df.head()


# In[8]:


type(df)


# In[9]:


df.plot()


# In[10]:


df.plot(style='k.')


# In[11]:


df.describe()


# In[17]:


df_mo=df.rolling(window=5).mean()
df_mo.plot()


# In[19]:


df_base=pd.concat([df,df.shift(1)],axis=1)
df_base.head()


# In[22]:


df_base.columns=['Actual_sales','Forecat_sales']
df_base.head()


# In[27]:


df_base.dropna(inplace=True)
df_base.head()


# In[28]:


from sklearn.metrics import mean_squared_error


# In[29]:


df_error=mean_squared_error(df_base.Actual_sales,df_base.Forecat_sales)
df_error


# In[30]:


math.sqrt(df_error)


# In[32]:


from statsmodels.graphics.tsaplots import plot_acf,plot_pacf


# In[33]:


plot_acf(df)


# In[34]:


plot_pacf(df)


# In[35]:


from statsmodels.tsa.arima_model import ARIMA


# In[36]:


df_train=df[0:25]
df_test=df[25:36]


# In[38]:


model=ARIMA(df_train,order=(3,1,2))


# In[39]:


model_fit=model.fit()


# In[40]:


model_fit.aic


# In[41]:


model_forecast=model_fit.forecast(steps=11)[0]


# In[42]:


math.sqrt( mean_squared_error(df_test,model_forecast))


# In[ ]:




